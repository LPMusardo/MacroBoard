<Window x:Class="MacroBoard.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MacroBoard"
        Height="600" 
        Width="725"
        mc:Ignorable="d"
        Title="Macroboard Desktop" MinHeight="600" MinWidth="520"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen"
        Style="{DynamicResource CustomWindowStyle}">


    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
       
    </Window.Resources>


    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <TextBox Style="{DynamicResource CustomTextBox}" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" x:Name="Search" HorizontalAlignment="Right" Height="30"  VerticalAlignment="Center" Width="291" TextChanged="Search_TextChanged" Margin="35,20,30,0"  >
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                        <Setter Property="Padding" Value="10,0,0,10"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <!--<Button Background="Transparent"  HorizontalAlignment="Right" Margin="640,16,30,15" VerticalAlignment="Center" Width="48" Height="20" Click="Search_TextChanged">
                <Image Height="17" Width="17" Style="{DynamicResource CustomImageSearch}" />
            </Button>-->
        </Grid>


        <Grid Grid.Row="1">
            <!--   Liste of favoris   -->
            <ListBox  
                Style="{DynamicResource CustomListBox}" 
                ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                x:Name="ListFav" Grid.ColumnSpan="5" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Center"  
                Margin="79,20,0,0" 
                ItemsSource="{Binding Path=FavoriteWorkFlows}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </Grid>

        <Grid Grid.Row="3">
            <!--    List of macros    -->
            <ListBox x:Name="ListMacro" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.ColumnSpan="5" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="{x:Null}" Margin="69,20,0,0" Grid.Column="1" ItemsSource="{Binding Path=WorkFlows}" >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        
                            <Button  Grid.Column = "0"  FontSize="10" Click="Button_Click">
                                <Image Source="{Binding ImageWorkflow }"
                                   RenderOptions.BitmapScalingMode='HighQuality'
                                   Width="90"
                                   Height="90"
                                   Stretch="Fill"
                                   VerticalAlignment="Center"
                                   Margin="0,0,0,0"
                                />
                            </Button>
                            <!--<TextBlock Text="{Binding Lbl_Name}" Margin="8,0,0,0"/>-->
                        
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.Style>
                    <Style/>
                </ListBox.Style>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="10,10,10,10"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </Grid>
        <Grid x:Name="panel" HorizontalAlignment="Left" Width="65" Background="Transparent" Grid.RowSpan="5" >
            <Border CornerRadius="5,5,5,5" BorderThickness="3,3,3,3" Style="{DynamicResource CustomBorder}" >
                <StackPanel x:Name="nav" Style="{DynamicResource CustomStackPanel}"  >
                    <Menu Background="Transparent" Height="50" Width="54" Margin="0,20,0,0">
                        <Image Margin="7,10,0,0" HorizontalAlignment="Center" Width="25" Height="25" Style="{DynamicResource CustomImageThemes}"/>
                        <MenuItem Margin="0,-40,1,1" Width="50" Height="54">
                            <MenuItem Header="Light" Click="ChangeTheme" Uid="0">
                                <MenuItem.Icon>
                                    <Rectangle Stroke="#FF848484" Fill="#FFE8E8E8" StrokeThickness="2" StrokeLineJoin="Round"  />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Dark" Click="ChangeTheme" Uid="1">
                                <MenuItem.Icon>
                                    <Rectangle Stroke="#FF404040" Fill="#FF1B1B1B" StrokeThickness="2" StrokeLineJoin="Round" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                    </Menu>
                    <Button x:Name="ButtonEdit" Click="EditionMode" Margin="10,40,0,10">
                        <Image Height="25" Width="25" Style="{DynamicResource CustomImageRearrange}"/>
                    </Button>
                    <Button x:Name="Edition" Margin="0,40,0,0" Click="AddWorkFlow" >
                        <Image Height="25" Width="25" Style="{DynamicResource CustomImageEdit}"/>
                    </Button>
                </StackPanel>
            </Border>
            <StackPanel x:Name="navi" Style="{DynamicResource CustomStackPanel}" VerticalAlignment="Bottom" Margin="0,0,0,20" >
                <Button Height="25" Width="25"  Click="AboutApp" HorizontalAlignment="Center">
                    <Image Height="25" Width="25" Style="{DynamicResource CustomImageAbout}"/>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
